#ifndef RAINDROP_CONDITIONS_H
#define RAINDROP_CONDITIONS_H

#include <vector>
#include <string>

namespace Conditions{
    namespace Unknown{
        const std::vector<std::string> c = {
                "    .-.      ",
                "     __)     ",
                "    (        ",
                "     `-᾿     ",
                "      •      "
        };
    };
    namespace Cloudy{
        const std::vector<std::string> c = {
            "             ",
            "\033[38;5;250m     .--.    \033[0m",
            "\033[38;5;250m  .-(    ).  \033[0m",
            "\033[38;5;250m (___.__)__) \033[0m",
            "             "
        };
    };
    namespace Fog{
        const std::vector<std::string> c = {
                "             ",
                "\033[38;5;251m _ - _ - _ - \033[0m",
                "\033[38;5;251m  _ - _ - _  \033[0m",
                "\033[38;5;251m _ - _ - _ - \033[0m",
                "             "
        };
    };
    namespace HeavyRain{
        const std::vector<std::string> c = {
                "\033[38;5;240;1m     .-.     \033[0m",
                "\033[38;5;240;1m    (   ).   \033[0m",
                "\033[38;5;240;1m   (___(__)  \033[0m",
                "\033[38;5;21;1m  ‚ʻ‚ʻ‚ʻ‚ʻ   \033[0m",
                "\033[38;5;21;1m  ‚ʻ‚ʻ‚ʻ‚ʻ   \033[0m"
        };
    };
    namespace HeavyShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;240;1m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;240;1m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;240;1m(___(__) \033[0m",
                "\033[38;5;21;1m   ‚ʻ‚ʻ‚ʻ‚ʻ  \033[0m",
                "\033[38;5;21;1m   ‚ʻ‚ʻ‚ʻ‚ʻ  \033[0m"
        };
    };
    namespace HeavySnow{
        const std::vector<std::string> c = {
                "\033[38;5;240;1m     .-.     \033[0m",
                "\033[38;5;240;1m    (   ).   \033[0m",
                "\033[38;5;240;1m   (___(__)  \033[0m",
                "\033[38;5;255;1m   * * * *   \033[0m",
                "\033[38;5;255;1m  * * * *    \033[0m"
        };
    };
    namespace HeavySnowShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;240;1m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;240;1m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;240;1m(___(__) \033[0m",
                "\033[38;5;255;1m    * * * *  \033[0m",
                "\033[38;5;255;1m   * * * *   \033[0m"
        };
    };
    namespace LightRain{
        const std::vector<std::string> c = {
                "\033[38;5;250m     .-.     \033[0m",
                "\033[38;5;250m    (   ).   \033[0m",
                "\033[38;5;250m   (___(__)  \033[0m",
                "\033[38;5;111m    ʻ ʻ ʻ ʻ  \033[0m",
                "\033[38;5;111m   ʻ ʻ ʻ ʻ   \033[0m"
        };
    };
    namespace LightShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "\033[38;5;111m     ʻ ʻ ʻ ʻ \033[0m",
                "\033[38;5;111m    ʻ ʻ ʻ ʻ  \033[0m"
        };
    };
    namespace LightSleet{
        const std::vector<std::string> c = {
                "\033[38;5;250m     .-.     \033[0m",
                "\033[38;5;250m    (   ).   \033[0m",
                "\033[38;5;250m   (___(__)  \033[0m",
                "\033[38;5;111m    ʻ \033[38;5;255m*\033[38;5;111m ʻ \033[38;5;255m*  \033[0m",
                "\033[38;5;255m   *\033[38;5;111m ʻ \033[38;5;255m*\033[38;5;111m ʻ   \033[0m"
        };
    };
    namespace LightSleetShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "\033[38;5;111m     ʻ \033[38;5;255m*\033[38;5;111m ʻ \033[38;5;255m* \033[0m",
                "\033[38;5;255m    *\033[38;5;111m ʻ \033[38;5;255m*\033[38;5;111m ʻ  \033[0m"
        };
    };
    namespace LightSnow{
        const std::vector<std::string> c = {
                "\033[38;5;250m     .-.     \033[0m",
                "\033[38;5;250m    (   ).   \033[0m",
                "\033[38;5;250m   (___(__)  \033[0m",
                "\033[38;5;255m    *  *  *  \033[0m",
                "\033[38;5;255m   *  *  *   \033[0m"
        };
    };
    namespace LightSnowShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "\033[38;5;255m     *  *  * \033[0m",
                "\033[38;5;255m    *  *  *  \033[0m"
        };
    };
    namespace PartlyCloudy{
        const std::vector<std::string> c = {
                "\033[38;5;226m   \\  /\033[0m      ",
                "\033[38;5;226m _ /\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m   \\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "             "
        };
    };
    namespace Sunny{
        const std::vector<std::string> c = {
                "\033[38;5;226m    \\   /    \033[0m",
                "\033[38;5;226m     .-.     \033[0m",
                "\033[38;5;226m  ‒ (   ) ‒  \033[0m",
                "\033[38;5;226m     `-᾿     \033[0m",
                "\033[38;5;226m    /   \\    \033[0m"
        };
    };
    namespace ThunderyHeavyRain{
        const std::vector<std::string> c = {
                "\033[38;5;240;1m     .-.     \033[0m",
                "\033[38;5;240;1m    (   ).   \033[0m",
                "\033[38;5;240;1m   (___(__)  \033[0m",
                "\033[38;5;21;1m  ‚ʻ\033[38;5;228;5m⚡\033[38;5;21;25mʻ‚\033[38;5;228;5m⚡\033[38;5;21;25m‚ʻ   \033[0m",
                "\033[38;5;21;1m  ‚ʻ‚ʻ\033[38;5;228;5m⚡\033[38;5;21;25mʻ‚ʻ   \033[0m"
        };
    };
    namespace ThunderyShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "\033[38;5;228;5m    ⚡\033[38;5;111;25mʻ ʻ\033[38;5;228;5m⚡\033[38;5;111;25mʻ ʻ \033[0m",
                "\033[38;5;111m    ʻ ʻ ʻ ʻ  \033[0m",
        };
    };
    namespace ThunderySnowShowers{
        const std::vector<std::string> c = {
                "\033[38;5;226m _`/\"\"\033[38;5;250m.-.    \033[0m",
                "\033[38;5;226m  ,\\_\033[38;5;250m(   ).  \033[0m",
                "\033[38;5;226m   /\033[38;5;250m(___(__) \033[0m",
                "\033[38;5;255m     *\033[38;5;228;5m⚡\033[38;5;255;25m *\033[38;5;228;5m⚡\033[38;5;255;25m * \033[0m",
                "\033[38;5;255m    *  *  *  \033[0m",
        };
    };
    namespace VeryCloudy{
        const std::vector<std::string> c = {
                "             ",
                "\033[38;5;240;1m     .--.    \033[0m",
                "\033[38;5;240;1m  .-(    ).  \033[0m",
                "\033[38;5;240;1m (___.__)__) \033[0m",
                "             ",
        };
    };

};

#endif //RAINDROP_CONDITIONS_H
